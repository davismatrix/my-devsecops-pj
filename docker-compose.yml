version: '3.8'

services:
  
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins-server
    restart: always
    user: root
    privileged: true
    ports:
      - "8080:8080"  # Jenkins UI
      - "50000:50000"  # Agent connection port
    environment:
      #- JAVA_OPTS=-Djenkins.install.runSetupWizard=false
      - DOCKER_HOST=tcp://docker:2375
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock  # Allow Jenkins to run Docker commands
    networks:
      - dev_network

  sonarqube:
    image: sonarqube:lts
    container_name: sonarqube-server
    restart: always
    ports:
      - "9000:9000"  # SonarQube UI
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://sonarqube_db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
    depends_on:
      - sonarqube_db
    networks:
      - dev_network

  sonarqube_db:
    image: postgres:latest
    container_name: sonarqube_db
    restart: always
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dev_network

  build_server:
    image: ubuntu:22.04
    container_name: build_server
    command: ["/bin/bash","-c","while true; do sleep 30; done"]
    networks:
      - dev_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Allow build server to run Docker commands
    restart: always

volumes:
  jenkins_home:
  sonarqube_data:
  sonarqube_logs:
  postgres_data:

networks:
  dev_network:
    driver: bridge
